#BlueJ class context
comment0.target=Conditionals
comment1.params=argv
comment1.target=void\ main(java.lang.String[])
comment10.params=ps\ word
comment10.target=boolean\ isPrefixAndSuffix(java.lang.String,\ java.lang.String)
comment10.text=\n\u00A0\ \u00A0\ \u00A0*\ return\ true\ if\ word\ begins\ and\ ends\ with\ ps\n\u00A0\ \u00A0\ \u00A0
comment11.params=word\ c
comment11.target=java.lang.String\ shortSide(java.lang.String,\ java.lang.String)
comment11.text=\n\u00A0\ \u00A0\ \u00A0*\ split\ the\ word\ at\ character\ c.\n\u00A0\ \u00A0\ \u00A0*\ return\ the\ shorter\ of\ the\ 2\ strings\ on\ either\ side\ of\ the\ split.\n\u00A0\ \u00A0\ \u00A0*\ if\ they\ are\ the\ same\ length\ concatenate\ them\ and\ return\n\u00A0\ \u00A0\ \u00A0*\ example\:\n\u00A0\ \u00A0\ \u00A0*\ c\ ->\ "c"\n\u00A0\ \u00A0\ \u00A0*\ word\ ->\ "racecar"\n\u00A0\ \u00A0\ \u00A0*\ return\ value\ ->\ "ra"\n\u00A0\ \u00A0\ \u00A0*\ \n\u00A0\ \u00A0\ \u00A0*\ c\ ->\ "e"\n\u00A0\ \u00A0\ \u00A0*\ word\ ->\ "racecar"\n\u00A0\ \u00A0\ \u00A0*\ return\ ->\ "raccar"\n\u00A0\ \u00A0\ \u00A0*\ \n\u00A0\ \u00A0\ \u00A0*\ c\ ->\ "u"\n\u00A0\ \u00A0\ \u00A0*\ word\ ->\ "computer"\n\u00A0\ \u00A0\ \u00A0*\ return\ ->\ "ter"\n\u00A0\ \u00A0\ \u00A0
comment12.params=word\ c
comment12.target=boolean\ tooMany(java.lang.String,\ java.lang.String)
comment12.text=\n\u00A0\ \u00A0\ \u00A0*\ return\ true\ if\ there\ are\ more\ than\ 3\ occurances\ of\ c\ in\ the\ string\ word.\n\u00A0\ \u00A0\ \u00A0*\ \n\u00A0\ \u00A0\ \u00A0*\ word\ ->\ "banana"\n\u00A0\ \u00A0\ \u00A0*\ c\ ->\ "a"\n\u00A0\ \u00A0\ \u00A0*\ return\ ->\ false\n\u00A0\ \u00A0\ \u00A0*\ \n\u00A0\ \u00A0\ \u00A0*\ word\ ->\ "alabama"\n\u00A0\ \u00A0\ \u00A0*\ c\ ->\ "a"\n\u00A0\ \u00A0\ \u00A0*\ return\ ->\ true\n\u00A0\ \u00A0\ \u00A0
comment13.params=
comment13.target=int\ randNum()
comment2.params=low\ high\ v
comment2.target=boolean\ between(int,\ int,\ int)
comment2.text=\n\u00A0\ \u00A0\ \u00A0*\ Return\ true\ if\ v\ is\ between\ low\ and\ high\n\u00A0\ \u00A0\ \u00A0
comment3.params=low\ high\ v
comment3.target=boolean\ notBetween(int,\ int,\ int)
comment3.text=\n\u00A0\ \u00A0\ \u00A0*\ Return\ true\ if\ v\ is\ not\ between\ low\ and\ high\n\u00A0\ \u00A0\ \u00A0
comment4.params=a\ b\ c
comment4.target=int\ greatestEven(int,\ int,\ int)
comment4.text=\n\u00A0\ \u00A0\ \u00A0*\ Return\ the\ greatestEven\ number\ from\ a,\ b,\ and\ c\n\u00A0\ \u00A0\ \u00A0
comment5.params=v\ a\ b
comment5.target=boolean\ isMultipleOf(int,\ int,\ int)
comment5.text=\n\u00A0\ \u00A0\ \u00A0*\ return\ true\ if\ v\ is\ a\ multiple\ of\ both\ a\ and\ b\n\u00A0\ \u00A0\ \u00A0
comment6.params=s1\ s2\ s3
comment6.target=boolean\ isTriangle(int,\ int,\ int)
comment6.text=\n\u00A0\ \u00A0\ \u00A0*\ return\ true\ if\ s1,\ s2,\ and\ s3\ represent\ the\ length\ of\ the\ sides\ of\ a\ triangle.\n\u00A0\ \u00A0\ \u00A0
comment7.params=s1\ s2\ s3
comment7.target=boolean\ isIsoscelese(int,\ int,\ int)
comment7.text=\n\u00A0\ \u00A0\ \u00A0*\ return\ true\ if\ s1,\ s2,\ and\ s3\ could\ possibly\ represent\ the\ lengths\ of\ the\ sides\ of\ an\ isoscelese\ triangle.\n\u00A0\ \u00A0\ \u00A0
comment8.params=s1\ s2\ s3
comment8.target=boolean\ isEqualateral(int,\ int,\ int)
comment8.text=\n\u00A0\ \u00A0\ \u00A0*\ Return\ true\ if\ s1,\ s1,\ and\ s3\ could\ represent\ the\ lengths\ of\ the\ sides\ of\ an\ equalateral\ triangle.\n\u00A0\ \u00A0\ \u00A0
comment9.params=q\ x\ c
comment9.target=boolean\ isPythTrip(int,\ int,\ int)
comment9.text=\n\u00A0\ \u00A0\ \u00A0*\ Return\ true\ if\ q,\ x,\ and\ c\ are\ a\ valid\ pythagorean\ triple\ (i.e.\ a^2\ +\ b^2\ \=\ c^2)\n\u00A0\ \u00A0\ \u00A0*\ Any\ combination\ of\ the\ three\ can\ make\ it\ valid,\ not\ necessarily\ in\ the\ order\ given.\n\u00A0\ \u00A0\ \u00A0
numComments=14
